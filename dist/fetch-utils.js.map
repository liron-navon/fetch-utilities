{"version":3,"sources":["webpack://fetch-utils/webpack/universalModuleDefinition","webpack://fetch-utils/webpack/bootstrap","webpack://fetch-utils/./src/index.ts","webpack://fetch-utils/./src/modules/Fetcher.ts","webpack://fetch-utils/./src/modules/Mocker.ts","webpack://fetch-utils/external \"lodash\""],"names":[],"mappings":"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","file":"fetch-utils.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fetch-utils\"] = factory();\n\telse\n\t\troot[\"fetch-utils\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","import {Mocker as M} from './modules/Mocker';\nimport {Fetcher as F} from './modules/Fetcher';\n\nexport const Mocker = M;\nexport const Fetcher = F;\n","import { merge } from 'lodash';\n\n// a utility type for convenient conversion of the params to an array\ntype FetchParamsAsArray = [RequestInfo, RequestInit?];\n\ninterface FetcherOptions {\n    defaultInfo: RequestInfo;\n    defaultInit: RequestInit;\n    baseURL: string;\n}\nexport class Fetcher {\n    private fetchInstance: typeof fetch;\n    public defaultInfo?: RequestInfo;\n    public defaultInit?: RequestInit;\n    public baseURL?: string;\n\n    constructor(\n        fetchInstance: typeof fetch,\n        options: Partial<FetcherOptions> = {},\n    ) {\n        this.defaultInfo = options.defaultInfo || undefined;\n        this.defaultInit = options.defaultInit || undefined;\n        this.baseURL = options.baseURL || undefined;\n        // if the instance is not bounded, bind it to the window\n        if (!fetchInstance.hasOwnProperty('prototype')) {\n            this.fetchInstance = fetchInstance.bind(window);\n        }\n        this.fetch = this.fetch.bind(this);\n    }\n\n    // a function to run before any request\n    public beforeInterceptor(...params: FetchParamsAsArray): FetchParamsAsArray | Promise<FetchParamsAsArray> {\n        return params;\n    }\n\n    // a function to run after any request\n    public afterInterceptor (response: Response): Promise<any>|Response {\n        return response;\n    }\n\n    // a function to run on errors\n    public errorInterceptor (error: Error): Error {\n        return error;\n    }\n\n    /**\n     * a fetch compatible function\n     * @param info\n     * @param init\n     */\n    public async fetch<ResponseData = Response|any>(info: RequestInfo, init?: RequestInit): Promise<ResponseData> {\n        let _init = init;\n        let _info = info;\n\n        // handling default init\n        if (this.defaultInit) {\n            if (!_init) {\n                _init = this.defaultInit;\n            } else {\n                _init = merge({}, this.defaultInit, init);\n            }\n        }\n\n        // handling default info\n        if (this.defaultInfo && typeof info === 'object') {\n            _info = merge({}, this.defaultInfo, info);\n        }\n\n        // handling base url\n        if (this.baseURL) {\n            if (typeof _info === 'string') {\n                if (!(_info as String).startsWith('http')) {\n                    _info = this.baseURL + _info;\n                }\n            } else {\n                if (_info.url && !_info.url.startsWith('http')) {\n                    _info = {..._info, url: this.baseURL + _info.url};\n                }\n            }\n        }\n\n        // the before hook can return a promise or an array\n        let augmentedParams = this.beforeInterceptor(_info, _init);\n        if (!Array.isArray(augmentedParams)) {\n            augmentedParams = await augmentedParams;\n        }\n\n        return this.fetchInstance(...augmentedParams)\n            .then((response) => this.afterInterceptor(response))\n            .catch((error) => {\n                const newError = this.errorInterceptor(error);\n                if (newError) {\n                    throw newError;\n                }\n            });\n    }\n}\n","// turns the route into a string to later search\nconst hashRoute = (method: string, url: string) => `${method.toLowerCase()}:${url}`;\n\ninterface MockerOptions {\n    defaultToRealFetch: boolean;\n    maxMockLatency: number;\n    minMockLatency: number;\n}\n// a simple class to create mocks for the fetch api\nexport class Mocker {\n    private routes: any = {};\n    private readonly fetchInstance: typeof fetch;\n\n    private readonly defaultToRealFetch: boolean;\n    private readonly maxMockLatency: number;\n    private readonly minMockLatency: number;\n\n    constructor(\n        fetchInstance: typeof fetch,\n        options: Partial<MockerOptions> = {},\n    ) {\n        this.defaultToRealFetch = options.defaultToRealFetch || false;\n        this.maxMockLatency = options.maxMockLatency || -1;\n        this.minMockLatency = options.minMockLatency || 0;\n\n        // if the instance is not bounded, bind it to the window\n        if (!fetchInstance.hasOwnProperty('prototype')) {\n            this.fetchInstance = fetchInstance.bind(window);\n        }\n        this.fetch = this.fetch.bind(this);\n    }\n\n    /**\n     * add a route to mock\n     * @param method - a method to mock\n     * @param url - a url for the request\n     * @param payload - the date the mock should return\n     */\n    public addRoute(method: string, url: string, payload: any) {\n        this.routes[hashRoute(method, url)] = JSON.stringify(payload);\n    }\n\n    /**\n     * add a route to mock with the GET method\n     * @param url - a url for the request\n     * @param payload - the date the mock should return\n     */\n    public get(url: string, payload: any) {\n        this.addRoute('get', url, payload);\n    }\n\n    /**\n     * add a route to mock with the POST method\n     * @param url - a url for the request\n     * @param payload - the date the mock should return\n     */\n    public post(url: string, payload: any) {\n        this.addRoute('post', url, payload);\n    }\n\n    /**\n     * add a route to mock with the DELETE method\n     * @param url - a url for the request\n     * @param payload - the date the mock should return\n     */\n    public delete(url: string, payload: any) {\n        this.addRoute('delete', url, payload);\n    }\n\n    /**\n     * add a route to mock with the PUT method\n     * @param url - a url for the request\n     * @param payload - the date the mock should return\n     */\n    public put(url: string, payload: any) {\n        this.addRoute('put', url, payload);\n    }\n\n    /**\n     * call fetch\n     * @param info\n     * @param init\n     */\n    public fetch(info: RequestInfo, init?: RequestInit): Promise<Response> {\n        const isSimple = typeof info === 'string';\n        const method = init ? init.method : isSimple ? 'get' : (info as Request).method;\n        const url = isSimple ? info : (info as Request).url;\n        const hash = hashRoute(method || 'get', url as string);\n        const payload = this.routes[hash];\n        if (payload) {\n            // fake some latency\n            return new Promise((resolve) => {\n                const {maxMockLatency, minMockLatency} = this;\n                let timeout = 0;\n                if (maxMockLatency < 0 || minMockLatency < 0) {\n                    timeout = Math.round(Math.random() * (maxMockLatency - minMockLatency)) + minMockLatency;\n                }\n                const response = new Response(payload);\n                setTimeout(() => resolve(response), timeout);\n            });\n        }\n        // fallback to using fetch\n        if (this.defaultToRealFetch) {\n            return this.fetchInstance(info, init);\n        }\n    }\n\n    public bindToWindow() {\n        (window as any).fetch = this.fetch;\n    }\n}\n","module.exports = require(\"lodash\");"],"sourceRoot":""}